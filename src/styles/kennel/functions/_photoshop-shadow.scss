@charset 'UTF-8';

/// Convert photoshop drop shadows to CSS3 box & text shadows
///
/// @access private
///
/// @param {Number} $angle
///   Controls the directions of the shadow.
/// @param {Number} $distance 
///   Controls the shadow offset in the direction of the Angle.
/// @param {Number} $spread
///   Determines the portion of the shadow (percentage of the Size)
///   that is a solid color; the rest of the shadow is blurred.
/// @param {Number} $size
///   Sets the radius of the shadow in pixels.
/// @param {Color} $color
///   The color of the shadow.
/// @param {Boolean} $inner
///   Is the shadow inner or not.
///
/// @example scss - Usage
///   box-shadow: ps-shadow(135deg, 10px, 10%, 10, rgba(0, 0, 0, 0.35));
///   box-shadow: ps-glow(0, 5px, rgba(red, 0.35), true);
///   text-shadow: ps-text-shadow(135deg, 1px, 0, 2px, #ffffff);
///
/// @example css - CSS Output
///   box-shadow: 7px 7px 8px 2px rgba(0,0,0,0.35);
///   box-shadow: 0px 0px 5px 0px rgba(255,0,0,0.35) inset;
///   text-shadow: 1px 1px 2px #fff;
///
/// @return {Shadow}
@function ps-shadow($angle: 120deg, $distance: 5px, $spread: 0%, $size: 5px, $color: rgba(0, 0, 0, 0.75), $inner: false) {
  // Stip values
  $distance: strip-units($distance);
  $spread: strip-units($spread);
  $size: strip-units($size);

  // Force $angle to deg if it is unitless
  @if unitless($angle) {
    $angle: $angle * 1deg;
  }
  
  $angle: 180 - convert-angle($angle, deg); // Photoshop angle starts 180deg before
  $angle: convert-angle($angle, rad); // Convert to radians

  $y: convert-units(round(sin($angle) * $distance), px);
  $x: convert-units(round(cos($angle) * $distance), px);
  $spread: convert-units($size * $spread / 100, px);
  $blur: $size - $spread;

  @return $x $y $blur $spread $color if($inner, inset, null);
}

@function ps-text-shadow($angle: 120deg, $distance: 5px, $spread: 0%, $size: 5px, $color: rgba(0, 0, 0, 0.75)) {
  $shadow: ps-shadow($angle, $distance, $spread, $size, $color);
  @return (nth($shadow, 1) nth($shadow, 2) nth($shadow, 3) nth($shadow, 5));
}

@function ps-glow($spread: 0, $size: 0, $color: rgba(0, 0, 0, 0.75), $inner: false) {
  @return ps-shadow(0, 0, $spread, $size, $color, $inner);
}